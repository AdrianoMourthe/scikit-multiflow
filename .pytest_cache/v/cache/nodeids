[
  "tests/classification/core/drift_detection/test_adwin.py::test_adwin",
  "tests/classification/core/drift_detection/test_ddm.py::test_ddm",
  "tests/classification/core/drift_detection/test_eddm.py::test_eddm",
  "tests/classification/core/drift_detection/test_page_hinkley.py::test_page_hinkley",
  "tests/classification/trees/test_hoeffding_tree.py::test_hoeffding_tree",
  "tests/core/utils/test_utils.py::test_get_dimensions",
  "tests/core/utils/test_utils.py::test_get_max_value_key",
  "tests/core/utils/test_utils.py::test_normalize_values_in_dict",
  "tests/core/utils/test_validation.py::test_check_random_state",
  "tests/core/utils/test_validation.py::test_check_weights",
  "tests/data/test_dataset_stream.py::test_dataset_stream",
  "tests/data/test_file_stream.py::test_file_stream",
  "tests/data/generators/test_agrwal_generator.py::test_agrawal_generator",
  "tests/data/generators/test_hyper_plane_generator.py::test_hyper_plane_generator",
  "tests/data/generators/test_led_generator.py::test_led_generator",
  "tests/data/generators/test_led_generator_drift.py::test_led_generator_drift",
  "tests/data/generators/test_mixed_generator.py::test_mixed_generator",
  "tests/data/generators/test_multilabel_generator.py::test_multilabel_generator",
  "tests/data/generators/test_random_rbf_generator.py::test_random_rbf_generator",
  "tests/data/generators/test_random_rbf_generator_drift.py::test_random_rbf_generator_drift",
  "tests/data/generators/test_random_tree_generator.py::test_random_tree_generator",
  "tests/data/generators/test_regression_generator.py::test_regression_generator",
  "tests/data/generators/test_sea_generator.py::test_sea_generator",
  "tests/data/generators/test_sine_generator.py::test_sine_generator",
  "tests/data/generators/test_stagger_generator.py::test_stagger_generator",
  "tests/data/generators/test_waveform_generator.py::test_waveform_generator",
  "tests/data/generators/test_waveform_generator.py::test_waveform_generator_noise",
  "tests/evaluation/test_evaluate_holdout.py::test_evaluate_holdout_classifier",
  "tests/evaluation/test_evaluate_prequential.py::test_evaluate_prequential_classifier"
]